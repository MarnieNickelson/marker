// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "foreignKeys"
}

model User {
  id             String   @id @default(cuid())
  name           String
  email          String   @unique
  password       String
  role           String   @default("user") // Possible roles: user, admin, manager
  isApproved     Boolean  @default(false)
  lastLogin      DateTime?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  // Relations
  grids          Grid[]
  brands         Brand[] // Users can have their own brands
  markers        Marker[] // Users can have their own markers
}

model Grid {
  id          String   @id @default(cuid())
  name        String   // Can be customized (e.g. "Top Shelf", "Drawer 1")
  columns     Int      @default(15)
  rows        Int      @default(12)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  markers     Marker[]
  // Relations
  userId      String?
  user        User?     @relation(fields: [userId], references: [id])
}

model Brand {
  id        String   @id @default(cuid())
  name      String   
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  markers   Marker[]
  // Relations - brands belong to users
  userId    String?
  user      User?    @relation(fields: [userId], references: [id])
  
  // Make name unique per user
  @@unique([name, userId])
}

model Marker {
  id           String   @id @default(cuid())
  markerNumber String   // No longer unique, allows the same marker to be in multiple locations
  colorName    String
  colorHex     String   @default("#000000") // Hex color code for the marker
  brandId      String?  // Foreign key to Brand
  brand        Brand?   @relation(fields: [brandId], references: [id])
  quantity     Int      @default(1) // Number of markers at this location
  gridId       String   // Foreign key to Grid
  grid         Grid     @relation(fields: [gridId], references: [id])
  columnNumber Int      // 1-15 (or whatever the grid size is)
  rowNumber    Int      // 1-12 (or whatever the grid size is)
  // User who owns this marker
  userId      String?
  user        User?    @relation(fields: [userId], references: [id])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}